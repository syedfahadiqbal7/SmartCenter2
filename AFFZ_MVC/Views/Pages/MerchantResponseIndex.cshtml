@{
    var paginatedSubCategories = ViewBag.ResponseForDisCountFromMerchant as List<AFFZ_Customer.Controllers.RequestForDisCountToUserViewModel>;
    ViewData["Title"] = "Merchant Responses";
}
<style>
    .rating-star {
        color: #ccc;
        cursor: pointer;
        font-size: 24px;
        transition: color 0.3s;
    }

        .rating-star.selected {
            color: #ffc107;
        }
</style>
<div class="col-lg-9">
    <!-- Merchant Responses Section -->
    <h6 class="user-title mb-4">Merchant Responses</h6>

    @if (paginatedSubCategories == null || !paginatedSubCategories.Any())
    {
        <div class="text-center py-5">
            <img src="/images/empty-state.png" alt="No Data" class="img-fluid" style="max-width: 200px;">
            <p class="mt-3 text-muted">No responses available at the moment. Please check back later.</p>
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-hover table-striped">
                <thead class="thead-dark">
                    <tr>
                        <th>#</th>
                        <th>Service Name</th>
                        <th>Current Status</th>
                        <th>Amount Before Discount</th>
                        <th>Amount After Discount</th>
                        <th>Response Date</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var data in paginatedSubCategories)
                    {
                        <tr class="table-row" data-toggle="modal" data-target="#actionModal"
                            data-rfdfu="@data.RFDFU"
                            data-servicename="@data.ServiceName"
                            data-currentstatus="@data.CurrentStatus"
                            data-serviceprice="@data.ServicePrice"
                            data-finalprice="@data.FINALPRICE"
                            data-responsedatetime="@data.ResponseDateTime"
                            data-merchantid="@data.MerchantID"
                            data-uid="@data.UID"
                            data-serviceid="@data.SID"
                            data-ismerchantselected="@data.IsMerchantSelected"
                            data-isrequestcompleted="@data.IsRequestCompleted"
                            data-ispaymentdone="@data.IsPaymentDone" style="cursor: pointer;">
                            <td>@data.RFDFU</td>
                            <td>@data.ServiceName</td>
                            <td>
                                <span class="badge badge-info">@data.CurrentStatus</span>
                            </td>
                            <td class="text-success">AED @data.ServicePrice</td>
                            <td class="text-danger">AED @data.FINALPRICE</td>
                            <td>@data.ResponseDateTime.ToString("dd MMM yyyy hh:mm tt")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    <!-- /Merchant Responses Section -->
    <!-- Action Modal -->
    <div class="modal fade" id="actionModal" tabindex="-1" role="dialog" aria-labelledby="actionModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header d-flex justify-content-between align-items-center">
                    <div id="modalFileSection" class="row mt-3" style="display: none;">
                        <div class="col-12">
                            <h5 class="modal-title" id="reviewModalLabel">Review for <span id="reviewServiceName"></span></h5>
                            <h6>
                                Download File uploaded by merchant:
                                <a id="fileDownloadLink" href="#" class="btn btn-info btn-sm" download>
                                    <i class="fas fa-download"></i>
                                </a>
                            </h6>
                        </div>
                    </div>

                    <!-- Move the close button to the right -->
                    <button type="button" class="btn btn-close close ml-auto" data-dismiss="modal" aria-label="Close">
                        @* <span aria-hidden="true">&times;</span> *@
                    </button>
                </div>
                <div class="modal-body">
                    <div id="SuccessHide">
                        <p><strong>Service Name:</strong> <span id="modalServiceNameDetails"></span></p>
                        <p><strong>Status:</strong> <span id="modalStatus"></span></p>
                        <p><strong>Amount Before Discount:</strong> AED <span id="modalServicePrice"></span></p>
                        <p><strong>Amount After Discount:</strong> AED <span id="modalFinalPrice"></span></p>
                        <p><strong>Response Date:</strong> <span id="modalResponseDateTime"></span></p>
                    </div>
                    <div id="ReviewForm" style="display:none;">
                        <form id="reviewForm">
                            <input type="hidden" id="reviewServiceId" />
                            <div class="form-group">
                                <label for="rating">Rating</label>
                                <div id="ratingStars">
                                    <!-- Render stars for ratings -->
                                    <i class="fas fa-star rating-star" data-value="1"></i>
                                    <i class="fas fa-star rating-star" data-value="2"></i>
                                    <i class="fas fa-star rating-star" data-value="3"></i>
                                    <i class="fas fa-star rating-star" data-value="4"></i>
                                    <i class="fas fa-star rating-star" data-value="5"></i>
                                </div>
                                <input type="hidden" id="rating" />
                                <input type="hidden" id="merchantId" />
                                <input type="hidden" id="CustomerId" />
                                <input type="hidden" id="rfdfu" />
                            </div>
                            <div class="form-group">
                                <label for="reviewText">Review</label>
                                <textarea id="reviewText" class="form-control" rows="4" placeholder="Write your review here..."></textarea>
                            </div>
                        </form>
                    </div>
                    <div id="modalActions" class="row">
                        <!-- Actions will be dynamically added here based on row data -->
                    </div>

                    <div class="modal-footer" id="reviewsubmitdiv" style="display:none;">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" id="submitReview">Submit Review</button>
                    </div>

                </div>
            </div>
        </div>
    </div>

</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const rows = document.querySelectorAll('.table-row');
        const modal = document.getElementById('actionModal');
        const fileSection = document.getElementById('modalFileSection');
        const downloadLink = document.getElementById('fileDownloadLink');
        const reviewModal = document.getElementById('reviewModal');
        const actionModal = document.getElementById('actionModal');
        //const openReviewLink = document.getElementById('openReviewLink');


        rows.forEach(row => {
            row.addEventListener('click', function () {
                // Populate modal data
                document.getElementById('modalServiceNameDetails').innerText = this.dataset.servicename;
                document.getElementById('modalStatus').innerText = this.dataset.currentstatus;
                document.getElementById('modalServicePrice').innerText = this.dataset.serviceprice;
                document.getElementById('modalFinalPrice').innerText = this.dataset.finalprice;
                document.getElementById('modalResponseDateTime').innerText = this.dataset.responsedatetime;

                const isServiceCompleted = this.dataset.isrequestcompleted === 'True';
                const hasReviewed = this.dataset.hasreviewed === 'True';
                const serviceId = this.dataset.serviceid;
                if (isServiceCompleted && !hasReviewed) {
                    // Open review modal
                    document.getElementById('reviewServiceName').innerText = this.dataset.servicename;
                    document.getElementById('merchantId').value = this.dataset.merchantid;
                    document.getElementById('CustomerId').value = this.dataset.uid;
                    document.getElementById('reviewServiceId').value = serviceId;
                    document.getElementById('rfdfu').value = this.dataset.rfdfu;

                    document.getElementById('modalActions').style.display = "none";
                    document.getElementById('reviewsubmitdiv').style.display = "block";
                }
                const actionsDiv = document.getElementById('modalActions');
                actionsDiv.innerHTML = ''; // Clear previous actions
                console.log("this.dataset.isrequestcompleted : "+this.dataset.isrequestcompleted);
                if (this.dataset.isrequestcompleted === 'True') {
                    actionsDiv.innerHTML = '<span class="text-success">Service Completed Successfully</span>';

                    document.getElementById('SuccessHide').innerHTML = "";
                    document.getElementById('ReviewForm').style.display = "block";

                    const _currentStatus = this.dataset.currentstatus;
                     console.log("currentStatus : "+_currentStatus);
                    if (_currentStatus === "Service Completed Successfully") {
                        // Show the file section and fetch the file
                        fileSection.style.display = "block";
                        const merchantId = this.dataset.merchantid;
                        const rfdfu = this.dataset.rfdfu;

                        fetch(`https://localhost:7047/api/FileUpload/GetMerchantFile?merchantId=${merchantId}&RFDFU=${rfdfu}`)
                            .then(response => response.json())
                            .then(files => {
                                console.log(files);
                                 // Filter for the record where uploadedBy is "Provider"
                                const providerFile = files.find(file => file.uploadedBy === "Provider");

                                if (providerFile) {
                                    console.log("Filtered file:", providerFile);

                                    // Update the download link
                                    downloadLink.href = `/MerchantResponseToUser/DownloadFile?fileName=${providerFile.fileName}&folderName=${providerFile.folderName}`;
                                    //downloadLink.textContent = `Download ${providerFile.fileName}`;
                                    //downloadLink.textContent = `<i class="fas fa-download"></i>`;
                                    fileSection.style.display = "block"; // Show the file section
                                } else {
                                    console.log("No file uploaded by Provider found.");
                                    fileSection.style.display = "none"; // Hide the file section
                                }
                            })
                            .catch(error => {
                                console.error("Error fetching files:", error);
                                fileSection.style.display = "none";
                            });
                    }

                } else {
                    const isMerchantSelected = parseInt(this.dataset.ismerchantselected) === 1;
                    const isPaymentDone = parseInt(this.dataset.ispaymentdone) > 0;
                    const merchantId = this.dataset.merchantid;
                    const rfdfu = this.dataset.rfdfu;
                    const uid = this.dataset.uid;

                    if (isMerchantSelected) {
                        if (isPaymentDone) {
                            actionsDiv.innerHTML = `
                                 <div class="d-flex flex-wrap justify-content-between">
        <a href="/Message/SendMessage?MerchantID=${merchantId}" class="btn btn-primary btn-sm m-1" style="flex: 1 1 calc(24% - 10px);" title="Send a message to the merchant">
            <i class="fas fa-envelope"></i> Chat
        </a>
        <a href="/MerchantResponseToUser/UploadDocuments?RFDFU=${rfdfu}&UID=${uid}&MerchantID=${merchantId}" class="btn btn-success btn-sm m-1" style="flex: 1 1 calc(24% - 10px);" title="Upload required documents">
            <i class="fas fa-upload"></i> Upload Files
        </a>
        <a href="/MerchantResponseToUser/CheckDocumentStatus?RFDFU=${rfdfu}&UID=${uid}&MerchantID=${merchantId}" class="btn btn-info btn-sm m-1" style="flex: 1 1 calc(24% - 10px);" title="Check the status of uploaded documents">
            <i class="fas fa-file-alt"></i> Check File Status
        </a>
        <button class="btn btn-danger btn-sm m-1 cancel-merchant" style="flex: 1 1 calc(24% - 10px);" data-url="/MerchantResponseToUser/DeSelectFinalMerchant?RFDFU=${rfdfu}&UID=${uid}&MerchantID=${merchantId}" title="Cancel the selected merchant">
            <i class="fas fa-ban"></i> Cancel Merchant
        </button>
    </div>
                            `;
                        } else {
                            actionsDiv.innerHTML = `
                                <a href="/MerchantResponseToUser/Payment?RFDFU=${rfdfu}&UID=${uid}&MerchantID=${merchantId}" class="btn btn-warning btn-block" title="Complete the pending payment">
                                    <i class="fas fa-money-bill"></i> Payment Due
                                </a>
                            `;
                        }
                    } else {
                        actionsDiv.innerHTML = `
                            <a href="/MerchantResponseToUser/SelectFinalMerchant?RFDFU=${rfdfu}&UID=${uid}&MerchantID=${merchantId}" class="btn btn-secondary btn-block" title="Select this merchant for the service">
                                <i class="fas fa-check-circle"></i> Select Merchant
                            </a>
                        `;
                    }
                }

                // Show modal
                $(modal).modal('show');

                // Attach SweetAlert2 to cancel-merchant buttons
                document.querySelectorAll('.cancel-merchant').forEach(button => {
                    button.addEventListener('click', function (e) {
                        e.preventDefault(); // Prevent default behavior
                        const cancelUrl = this.dataset.url;

                        Swal.fire({
                            title: 'Are you sure?',
                            text: 'Do you want to cancel this merchant. You have already paid for this client. Refund process may take 7 days.?',
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#d33',
                            cancelButtonColor: '#3085d6',
                            confirmButtonText: 'Yes, cancel it!',
                            cancelButtonText: 'No, keep it'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                // Redirect or perform AJAX to cancel
                                window.location.href = cancelUrl;
                            }
                        });
                    });
                });
            });
        });
        // Rating stars logic
        document.querySelectorAll('.rating-star').forEach(star => {
            star.addEventListener('click', function () {
                const value = this.dataset.value;
                document.getElementById('rating').value = value;
                document.querySelectorAll('.rating-star').forEach(star => {
                    star.classList.remove('selected');
                    if (star.dataset.value <= value) {
                        star.classList.add('selected');
                    }
                });
            });
        });

        // Submit review
        document.getElementById('submitReview').addEventListener('click', function () {
            const review = {
                ServiceId: document.getElementById('reviewServiceId').value,
                Rating: document.getElementById('rating').value,
                ReviewText: document.getElementById('reviewText').value,
                ReviewDate: new Date().toISOString(),
                merchantId: document.getElementById('merchantId').value,
                CustomerId: document.getElementById('CustomerId').value,
                RFDFU: document.getElementById('rfdfu').value,
            };
                if (!review.Rating || !review.ReviewText.trim()) {
                    alert('Please provide a rating and review text.');
                    return;
                }
            fetch('https://localhost:7047/api/ReviewsApi/CreateReview', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(review),
            })
                .then(response => {
                    if (response.ok) {
                        alert('Thank you for your review!');
                        document.getElementById('reviewForm').reset();
                        document.querySelectorAll('.rating-star').forEach(star => star.classList.remove('selected'));
                        $(reviewModal).modal('hide');
                        $(actionModal).modal('show');
                    } else {
                        alert('Failed to submit review.');
                    }
                })
                .catch(error => console.error('Error submitting review:', error));
        });
           
        // Fix modal cancel button
        document.querySelector('.modal .close').addEventListener('click', function () {
            $(modal).modal('hide');
        });
    });
</script>
