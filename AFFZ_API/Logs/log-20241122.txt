2024-11-22T09:35:18.7608783+04:00 0HN8AMTHRVBPS:00000007 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T09:54:13.3716070+04:00 0HN8AN8A1UKOV:00000004 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T09:55:59.4915304+04:00 0HN8AN8A1UKP0:00000001 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T09:59:30.8672984+04:00 0HN8ANB4QJSD3:00000004 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T10:05:20.1166072+04:00 0HN8ANB4QJSD4:00000001 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T10:29:01.9313679+04:00 0HN8ANB4QJSD6:00000001 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T10:29:40.8379486+04:00 0HN8ANS3ME9CN:00000004 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T10:30:41.3169069+04:00 0HN8ANS3ME9CN:00000007 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T10:37:50.8847860+04:00 0HN8ANS3ME9CO:00000001 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T10:38:31.5926620+04:00 0HN8ANS3ME9CO:00000004 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T10:51:58.9034962+04:00 0HN8AO8IAQPJ5:00000004 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T10:57:30.9763899+04:00 0HN8AOAFDOSLT:00000007 [INF] GetUsersWithDocuments method called. (826a3c84)
2024-11-22T10:57:31.0261586+04:00 0HN8AOAFDOSLT:00000007 [INF] Users with documents retrieved successfully. (00c8d984)
2024-11-22T10:57:31.0569274+04:00 0HN8AOAFDOSLT:00000008 [INF] ReviewDocuments method called for UserId: 2 (852993a5)
2024-11-22T10:57:31.0911308+04:00 0HN8AOAFDOSLT:00000008 [INF] Documents retrieved successfully for UserId: 2 (53f85e53)
2024-11-22T10:57:48.2928147+04:00 0HN8AOAFDOSLT:00000018 [INF] GetUsersWithDocuments method called. (826a3c84)
2024-11-22T10:57:48.3223932+04:00 0HN8AOAFDOSLT:00000018 [INF] Users with documents retrieved successfully. (00c8d984)
2024-11-22T10:57:48.3379815+04:00 0HN8AOAFDOSLT:00000019 [INF] ReviewDocuments method called for UserId: 2 (852993a5)
2024-11-22T10:57:48.3497971+04:00 0HN8AOAFDOSLT:00000019 [INF] Documents retrieved successfully for UserId: 2 (53f85e53)
2024-11-22T10:57:49.9938335+04:00 0HN8AOAFDOSLT:0000001E [INF] Generated SQL: DECLARE @__merchantId_0 int = 3;

SELECT [c].[MessageID], [c].[CreatedBy], [c].[CreatedDate], [c].[IsRead], [c].[MerchantID], [c].[MessageContent], [c].[MessageTimestamp], [c].[MessageType], [c].[ModifiedBy], [c].[ModifyDate], [c].[ReceiverID], [c].[SenderID]
FROM [ChatMessage] AS [c]
WHERE [c].[SenderID] = @__merchantId_0 OR [c].[ReceiverID] = @__merchantId_0 (a4a74139)
2024-11-22T10:57:50.0142945+04:00 0HN8AOAFDOSLT:0000001E [INF] No Messages found retrieved successfully (59f49028)
2024-11-22T11:08:54.4865824+04:00 0HN8AOGTKE42C:00000001 [ERR] An unhandled exception has occurred while executing the request. (48a46595)
System.MissingMethodException: Attempted to invoke a deleted method implementation. This can happen when a method is deleted or its name or signature is changed while the application is running.
   at AFFZ_API.Controllers.ReviewsApiController.GetAllReviews()
   at lambda_method343(Closure, Object, Object[])
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-11-22T11:09:29.7081123+04:00 0HN8AOGTKE42C:00000003 [ERR] An unhandled exception has occurred while executing the request. (48a46595)
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

AFFZ_API.Controllers.ReviewsApiController.GetAllReviews (AFFZ_API)
AFFZ_API.Controllers.ReviewsApiController.GetAllReviews (AFFZ_API)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(Span`1 candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, Span`1 candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.Select(HttpContext httpContext, Span`1 candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-11-22T11:10:39.7699396+04:00 0HN8AOGTKE42D:00000001 [ERR] An unhandled exception has occurred while executing the request. (48a46595)
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

AFFZ_API.Controllers.ReviewsApiController.GetAllReviews (AFFZ_API)
AFFZ_API.Controllers.ReviewsApiController.GetAllReviews (AFFZ_API)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(Span`1 candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, Span`1 candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.Select(HttpContext httpContext, Span`1 candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-11-22T11:10:57.5465791+04:00 0HN8AOGTKE42D:00000003 [ERR] An unhandled exception has occurred while executing the request. (48a46595)
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

AFFZ_API.Controllers.ReviewsApiController.GetAllReviews (AFFZ_API)
AFFZ_API.Controllers.ReviewsApiController.GetAllReviews (AFFZ_API)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(Span`1 candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, Span`1 candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.Select(HttpContext httpContext, Span`1 candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-11-22T11:11:12.6391373+04:00 0HN8AOGTKE42E:00000002 [ERR] An unhandled exception has occurred while executing the request. (48a46595)
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

AFFZ_API.Controllers.ReviewsApiController.GetAllReviews (AFFZ_API)
AFFZ_API.Controllers.ReviewsApiController.GetAllReviews (AFFZ_API)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(Span`1 candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, Span`1 candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.Select(HttpContext httpContext, Span`1 candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-11-22T11:17:58.8682733+04:00 0HN8AON0UO95B:00000014 [INF] GetUsersWithDocuments method called. (826a3c84)
2024-11-22T11:17:58.9105065+04:00 0HN8AON0UO95B:00000014 [INF] Users with documents retrieved successfully. (00c8d984)
2024-11-22T11:17:58.9381006+04:00 0HN8AON0UO95B:00000015 [INF] ReviewDocuments method called for UserId: 2 (852993a5)
2024-11-22T11:17:58.9701482+04:00 0HN8AON0UO95B:00000015 [INF] Documents retrieved successfully for UserId: 2 (53f85e53)
2024-11-22T11:18:14.5755635+04:00 0HN8AON0UO95B:0000001B [INF] ReviewDocuments method called for UserId: 2 (852993a5)
2024-11-22T11:18:14.5998072+04:00 0HN8AON0UO95B:0000001B [INF] Documents retrieved successfully for UserId: 2 (53f85e53)
2024-11-22T11:18:19.3200500+04:00 0HN8AON0UO95B:00000020 [INF] GetUsersWithDocuments method called. (826a3c84)
2024-11-22T11:18:19.3265515+04:00 0HN8AON0UO95B:00000020 [INF] Users with documents retrieved successfully. (00c8d984)
2024-11-22T11:18:19.3362175+04:00 0HN8AON0UO95B:00000021 [INF] ReviewDocuments method called for UserId: 2 (852993a5)
2024-11-22T11:18:19.3395310+04:00 0HN8AON0UO95B:00000021 [INF] Documents retrieved successfully for UserId: 2 (53f85e53)
2024-11-22T11:18:21.0433434+04:00 0HN8AON0UO95B:00000027 [INF] No Messages found retrieved successfully (59f49028)
2024-11-22T11:18:23.2861508+04:00 0HN8AON0UO95B:0000002A [INF] GetUsersWithDocuments method called. (826a3c84)
2024-11-22T11:18:23.2951415+04:00 0HN8AON0UO95B:0000002A [INF] Users with documents retrieved successfully. (00c8d984)
2024-11-22T11:18:23.3058183+04:00 0HN8AON0UO95B:0000002B [INF] ReviewDocuments method called for UserId: 2 (852993a5)
2024-11-22T11:18:23.3086251+04:00 0HN8AON0UO95B:0000002B [INF] Documents retrieved successfully for UserId: 2 (53f85e53)
2024-11-22T11:21:15.4689541+04:00 0HN8AON0UO95C:00000001 [INF] GetUsersWithDocuments method called. (826a3c84)
2024-11-22T11:21:15.4963161+04:00 0HN8AON0UO95C:00000001 [INF] Users with documents retrieved successfully. (00c8d984)
2024-11-22T11:21:15.5070826+04:00 0HN8AON0UO95C:00000002 [INF] ReviewDocuments method called for UserId: 2 (852993a5)
2024-11-22T11:21:15.5132093+04:00 0HN8AON0UO95C:00000002 [INF] Documents retrieved successfully for UserId: 2 (53f85e53)
2024-11-22T11:25:39.5260215+04:00 0HN8AON0UO95D:00000001 [INF] GetUsersWithDocuments method called. (826a3c84)
2024-11-22T11:25:39.5530279+04:00 0HN8AON0UO95D:00000001 [INF] Users with documents retrieved successfully. (00c8d984)
2024-11-22T11:25:39.5789362+04:00 0HN8AON0UO95D:00000002 [INF] ReviewDocuments method called for UserId: 2 (852993a5)
2024-11-22T11:25:39.5870237+04:00 0HN8AON0UO95D:00000002 [INF] Documents retrieved successfully for UserId: 2 (53f85e53)
2024-11-22T11:33:27.3836199+04:00 0HN8AOSTRF03V:00000013 [INF] GetUsersWithDocuments method called. (826a3c84)
2024-11-22T11:33:27.4450229+04:00 0HN8AOSTRF03V:00000013 [INF] Users with documents retrieved successfully. (00c8d984)
2024-11-22T11:33:27.4862867+04:00 0HN8AOSTRF03V:00000014 [INF] ReviewDocuments method called for UserId: 2 (852993a5)
2024-11-22T11:33:27.5551311+04:00 0HN8AOSTRF03V:00000014 [INF] Documents retrieved successfully for UserId: 2 (53f85e53)
2024-11-22T11:33:29.1156389+04:00 0HN8AOSTRF03V:0000001A [INF] Generated SQL: DECLARE @__merchantId_0 int = 3;

SELECT [c].[MessageID], [c].[CreatedBy], [c].[CreatedDate], [c].[IsRead], [c].[MerchantID], [c].[MessageContent], [c].[MessageTimestamp], [c].[MessageType], [c].[ModifiedBy], [c].[ModifyDate], [c].[ReceiverID], [c].[SenderID]
FROM [ChatMessage] AS [c]
WHERE [c].[SenderID] = @__merchantId_0 OR [c].[ReceiverID] = @__merchantId_0 (a4a74139)
2024-11-22T11:33:29.1530300+04:00 0HN8AOSTRF03V:0000001A [INF] No Messages found retrieved successfully (59f49028)
2024-11-22T15:56:03.7397355+04:00 0HN8ATIFHLIJU:00000004 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T23:27:04.4949980+04:00 0HN8B5E3C964M:00000004 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T23:27:41.1471496+04:00 0HN8B5E3C964M:00000007 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T23:29:11.7698983+04:00 0HN8B5E3C964N:00000001 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T23:31:36.2308329+04:00 0HN8B5E3C964O:00000001 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T23:40:50.9246501+04:00 0HN8B5E3C964Q:00000001 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T23:41:09.4566787+04:00 0HN8B5E3C964Q:00000004 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T23:41:09.5477464+04:00 0HN8B5E3C964Q:00000006 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T23:41:09.6692863+04:00 0HN8B5E3C964R:00000003 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T23:41:11.9610705+04:00 0HN8B5E3C964R:00000006 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T23:46:22.1896078+04:00 0HN8B5E3C964U:00000001 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T23:50:44.9110978+04:00 0HN8B5E3C964V:00000001 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T23:53:14.3349999+04:00 0HN8B5E3C9650:00000001 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-22T23:54:08.2039086+04:00 0HN8B5E3C9650:00000004 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
