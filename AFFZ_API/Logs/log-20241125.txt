2024-11-25T13:28:37.6005182+04:00 0HN8D6AMNKUJU:0000000E [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-25T13:28:37.9613920+04:00 0HN8D6AMNKUJU:00000014 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-25T13:28:55.0669045+04:00 0HN8D6AMNKUJU:00000019 [INF] sendRequestToSavePayment method called with UserId: 2 (b9981db9)
2024-11-25T13:28:55.8696686+04:00 0HN8D6AMNKUJU:00000019 [ERR] An error occurred while processing the discount request. (059efe84)
Microsoft.EntityFrameworkCore.DbUpdateException: Could not save changes because the target table has database triggers. Please configure your table accordingly, see https://aka.ms/efcore-docs-sqlserver-save-changes-and-output-clause for more information.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The target table 'PaymentHistory' of the DML statement cannot have any enabled triggers if the statement contains an OUTPUT clause without INTO clause.
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:9aa9e961-8f5e-4447-b832-5ccde4490cc6
Error Number:334,State:1,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at AFFZ_API.Controllers.PaymentController.sendRequestToSavePayment(PaymentHistory SavePaymentHistory) in D:\webapplication_codes2022preview\SmartCenter-main\SmartCenter\AFFZ_API\Controllers\PaymentController.cs:line 24
2024-11-25T13:31:50.2366238+04:00 0HN8D6AMNKUJV:00000001 [INF] sendRequestToSavePayment method called with UserId: 2 (b9981db9)
2024-11-25T13:36:17.5817792+04:00 0HN8D6AMNKUJV:00000001 [ERR] An error occurred while processing the discount request. (059efe84)
Microsoft.EntityFrameworkCore.DbUpdateException: Could not save changes because the target table has database triggers. Please configure your table accordingly, see https://aka.ms/efcore-docs-sqlserver-save-changes-and-output-clause for more information.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The target table 'PaymentHistory' of the DML statement cannot have any enabled triggers if the statement contains an OUTPUT clause without INTO clause.
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:9aa9e961-8f5e-4447-b832-5ccde4490cc6
Error Number:334,State:1,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at AFFZ_API.Controllers.PaymentController.sendRequestToSavePayment(PaymentHistory SavePaymentHistory)
2024-11-25T13:36:56.2026036+04:00 0HN8D6AMNKUK0:00000001 [INF] sendRequestToSavePayment method called with UserId: 2 (b9981db9)
2024-11-25T13:42:35.5357150+04:00 0HN8D6LNIMPN3:0000000E [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-25T13:42:35.9566640+04:00 0HN8D6LNIMPN3:00000014 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-25T13:43:14.7440903+04:00 0HN8D6LNIMPN3:00000019 [INF] sendRequestToSavePayment method called with UserId: 2 (b9981db9)
2024-11-25T13:43:17.3221441+04:00 0HN8D6LNIMPN3:00000019 [INF] Payment Done Successfully. (e71e65ea)
2024-11-25T13:43:23.1686234+04:00 0HN8D6LNIMPN3:0000001A [INF] UpdateRequestForDisCountToUserForPaymentDont method called with UserId: 2 (b12c6fe3)
2024-11-25T13:43:23.1857058+04:00 0HN8D6LNIMPN3:0000001A [INF] Payment status updated. (3afab57c)
2024-11-25T13:45:54.7287729+04:00 0HN8D6LNIMPN6:00000001 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-25T17:33:07.7243738+04:00 0HN8DAMFTHU6A:00000011 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-25T17:33:08.1867859+04:00 0HN8DAMFTHU6A:00000017 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-25T17:33:36.3000493+04:00 0HN8DAMFTHU6A:0000001C [INF] sendRequestToSavePayment method called with UserId: 8 (b9981db9)
2024-11-25T17:33:36.5252295+04:00 0HN8DAMFTHU6A:0000001C [INF] Payment Done Successfully. (e71e65ea)
2024-11-25T17:33:45.2559644+04:00 0HN8DAMFTHU6A:0000001D [INF] UpdateRequestForDisCountToUserForPaymentDont method called with UserId: 8 (b12c6fe3)
2024-11-25T17:33:45.2630623+04:00 0HN8DAMFTHU6A:0000001D [INF] Payment status updated. (3afab57c)
2024-11-25T17:33:56.0201306+04:00 0HN8DAMFTHU6A:00000023 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
2024-11-25T17:34:00.5464794+04:00 0HN8DAMFTHU6A:00000026 [INF] SELECT [r].[SID], COALESCE([s].[ServicePrice], 0) AS [ServicePrice], [s].[ServiceName], COALESCE([s].[MerchantID], 0) AS [MerchantID], CAST([r].[FINALPRICE] AS decimal(18,2)) AS [FINALPRICE], [r].[UID], [r].[RFDFU], [r].[IsMerchantSelected], [r].[ResponseDateTime], [r].[IsPaymentDone], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN [r0].[StatusDescription]
    ELSE N'Unknown'
END AS [CurrentStatus], CASE
    WHEN [r0].[StatusID] IS NOT NULL THEN CASE
        WHEN [r0].[StatusName] = N'Completed' THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END
    ELSE CAST(0 AS bit)
END AS [IsRequestCompleted]
FROM [Service] AS [s]
INNER JOIN [RequestForDisCountToUser] AS [r] ON [s].[ServiceID] = [r].[SID] AND COALESCE([s].[MerchantID], 0) = [r].[MID]
LEFT JOIN [CurrentServiceStatus] AS [c] ON [r].[UID] = [c].[UId] AND COALESCE([s].[MerchantID], 0) = [c].[MId] AND [r].[RFDFU] = [c].[RFDFU]
LEFT JOIN [RequestStatuses] AS [r0] ON CONVERT(int, [c].[CurrentStatus]) = [r0].[StatusID]
WHERE [s].[MerchantID] IS NOT NULL (fb864ff2)
